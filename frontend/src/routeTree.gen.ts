/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as AppImport } from './routes/_app'
import { Route as IndexImport } from './routes/index'
import { Route as AuthAuthImport } from './routes/_auth/auth_'
import { Route as AppSearchImport } from './routes/_app/search'
import { Route as AppMatchImport } from './routes/_app/match'
import { Route as AppLikesImport } from './routes/_app/likes'
import { Route as AppHomeImport } from './routes/_app/home'
import { Route as AppTestWsImport } from './routes/_app/TestWs'
import { Route as AuthAuthRegisterImport } from './routes/_auth/auth.register'
import { Route as AuthAuthNotVerifyImport } from './routes/_auth/auth.not-verify'
import { Route as AuthAuthLoginImport } from './routes/_auth/auth.login'
import { Route as AuthAuthForgottenpasswordImport } from './routes/_auth/auth.forgottenpassword'
import { Route as AppProfileMeImport } from './routes/_app/profile.me'
import { Route as AppProfileEditInfoImport } from './routes/_app/profile.edit-info'
import { Route as AppProfileEditImagesImport } from './routes/_app/profile.edit-images'
import { Route as AppProfileUsernameImport } from './routes/_app/profile.$username'
import { Route as AuthAuthVerifyIdImport } from './routes/_auth/auth.verify.$id'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthAuthRoute = AuthAuthImport.update({
  id: '/auth_',
  path: '/auth',
  getParentRoute: () => AuthRoute,
} as any)

const AppSearchRoute = AppSearchImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => AppRoute,
} as any)

const AppMatchRoute = AppMatchImport.update({
  id: '/match',
  path: '/match',
  getParentRoute: () => AppRoute,
} as any)

const AppLikesRoute = AppLikesImport.update({
  id: '/likes',
  path: '/likes',
  getParentRoute: () => AppRoute,
} as any)

const AppHomeRoute = AppHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AppRoute,
} as any)

const AppTestWsRoute = AppTestWsImport.update({
  id: '/TestWs',
  path: '/TestWs',
  getParentRoute: () => AppRoute,
} as any)

const AuthAuthRegisterRoute = AuthAuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAuthNotVerifyRoute = AuthAuthNotVerifyImport.update({
  id: '/auth/not-verify',
  path: '/auth/not-verify',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAuthLoginRoute = AuthAuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAuthForgottenpasswordRoute = AuthAuthForgottenpasswordImport.update({
  id: '/auth/forgottenpassword',
  path: '/auth/forgottenpassword',
  getParentRoute: () => AuthRoute,
} as any)

const AppProfileMeRoute = AppProfileMeImport.update({
  id: '/profile/me',
  path: '/profile/me',
  getParentRoute: () => AppRoute,
} as any)

const AppProfileEditInfoRoute = AppProfileEditInfoImport.update({
  id: '/profile/edit-info',
  path: '/profile/edit-info',
  getParentRoute: () => AppRoute,
} as any)

const AppProfileEditImagesRoute = AppProfileEditImagesImport.update({
  id: '/profile/edit-images',
  path: '/profile/edit-images',
  getParentRoute: () => AppRoute,
} as any)

const AppProfileUsernameRoute = AppProfileUsernameImport.update({
  id: '/profile/$username',
  path: '/profile/$username',
  getParentRoute: () => AppRoute,
} as any)

const AuthAuthVerifyIdRoute = AuthAuthVerifyIdImport.update({
  id: '/auth/verify/$id',
  path: '/auth/verify/$id',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_app/TestWs': {
      id: '/_app/TestWs'
      path: '/TestWs'
      fullPath: '/TestWs'
      preLoaderRoute: typeof AppTestWsImport
      parentRoute: typeof AppImport
    }
    '/_app/home': {
      id: '/_app/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AppHomeImport
      parentRoute: typeof AppImport
    }
    '/_app/likes': {
      id: '/_app/likes'
      path: '/likes'
      fullPath: '/likes'
      preLoaderRoute: typeof AppLikesImport
      parentRoute: typeof AppImport
    }
    '/_app/match': {
      id: '/_app/match'
      path: '/match'
      fullPath: '/match'
      preLoaderRoute: typeof AppMatchImport
      parentRoute: typeof AppImport
    }
    '/_app/search': {
      id: '/_app/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof AppSearchImport
      parentRoute: typeof AppImport
    }
    '/_auth/auth_': {
      id: '/_auth/auth_'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthImport
      parentRoute: typeof AuthImport
    }
    '/_app/profile/$username': {
      id: '/_app/profile/$username'
      path: '/profile/$username'
      fullPath: '/profile/$username'
      preLoaderRoute: typeof AppProfileUsernameImport
      parentRoute: typeof AppImport
    }
    '/_app/profile/edit-images': {
      id: '/_app/profile/edit-images'
      path: '/profile/edit-images'
      fullPath: '/profile/edit-images'
      preLoaderRoute: typeof AppProfileEditImagesImport
      parentRoute: typeof AppImport
    }
    '/_app/profile/edit-info': {
      id: '/_app/profile/edit-info'
      path: '/profile/edit-info'
      fullPath: '/profile/edit-info'
      preLoaderRoute: typeof AppProfileEditInfoImport
      parentRoute: typeof AppImport
    }
    '/_app/profile/me': {
      id: '/_app/profile/me'
      path: '/profile/me'
      fullPath: '/profile/me'
      preLoaderRoute: typeof AppProfileMeImport
      parentRoute: typeof AppImport
    }
    '/_auth/auth/forgottenpassword': {
      id: '/_auth/auth/forgottenpassword'
      path: '/auth/forgottenpassword'
      fullPath: '/auth/forgottenpassword'
      preLoaderRoute: typeof AuthAuthForgottenpasswordImport
      parentRoute: typeof AuthImport
    }
    '/_auth/auth/login': {
      id: '/_auth/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthAuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_auth/auth/not-verify': {
      id: '/_auth/auth/not-verify'
      path: '/auth/not-verify'
      fullPath: '/auth/not-verify'
      preLoaderRoute: typeof AuthAuthNotVerifyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/auth/register': {
      id: '/_auth/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthAuthRegisterImport
      parentRoute: typeof AuthImport
    }
    '/_auth/auth/verify/$id': {
      id: '/_auth/auth/verify/$id'
      path: '/auth/verify/$id'
      fullPath: '/auth/verify/$id'
      preLoaderRoute: typeof AuthAuthVerifyIdImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppTestWsRoute: typeof AppTestWsRoute
  AppHomeRoute: typeof AppHomeRoute
  AppLikesRoute: typeof AppLikesRoute
  AppMatchRoute: typeof AppMatchRoute
  AppSearchRoute: typeof AppSearchRoute
  AppProfileUsernameRoute: typeof AppProfileUsernameRoute
  AppProfileEditImagesRoute: typeof AppProfileEditImagesRoute
  AppProfileEditInfoRoute: typeof AppProfileEditInfoRoute
  AppProfileMeRoute: typeof AppProfileMeRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppTestWsRoute: AppTestWsRoute,
  AppHomeRoute: AppHomeRoute,
  AppLikesRoute: AppLikesRoute,
  AppMatchRoute: AppMatchRoute,
  AppSearchRoute: AppSearchRoute,
  AppProfileUsernameRoute: AppProfileUsernameRoute,
  AppProfileEditImagesRoute: AppProfileEditImagesRoute,
  AppProfileEditInfoRoute: AppProfileEditInfoRoute,
  AppProfileMeRoute: AppProfileMeRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthAuthRoute: typeof AuthAuthRoute
  AuthAuthForgottenpasswordRoute: typeof AuthAuthForgottenpasswordRoute
  AuthAuthLoginRoute: typeof AuthAuthLoginRoute
  AuthAuthNotVerifyRoute: typeof AuthAuthNotVerifyRoute
  AuthAuthRegisterRoute: typeof AuthAuthRegisterRoute
  AuthAuthVerifyIdRoute: typeof AuthAuthVerifyIdRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthRoute: AuthAuthRoute,
  AuthAuthForgottenpasswordRoute: AuthAuthForgottenpasswordRoute,
  AuthAuthLoginRoute: AuthAuthLoginRoute,
  AuthAuthNotVerifyRoute: AuthAuthNotVerifyRoute,
  AuthAuthRegisterRoute: AuthAuthRegisterRoute,
  AuthAuthVerifyIdRoute: AuthAuthVerifyIdRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/TestWs': typeof AppTestWsRoute
  '/home': typeof AppHomeRoute
  '/likes': typeof AppLikesRoute
  '/match': typeof AppMatchRoute
  '/search': typeof AppSearchRoute
  '/auth': typeof AuthAuthRoute
  '/profile/$username': typeof AppProfileUsernameRoute
  '/profile/edit-images': typeof AppProfileEditImagesRoute
  '/profile/edit-info': typeof AppProfileEditInfoRoute
  '/profile/me': typeof AppProfileMeRoute
  '/auth/forgottenpassword': typeof AuthAuthForgottenpasswordRoute
  '/auth/login': typeof AuthAuthLoginRoute
  '/auth/not-verify': typeof AuthAuthNotVerifyRoute
  '/auth/register': typeof AuthAuthRegisterRoute
  '/auth/verify/$id': typeof AuthAuthVerifyIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/TestWs': typeof AppTestWsRoute
  '/home': typeof AppHomeRoute
  '/likes': typeof AppLikesRoute
  '/match': typeof AppMatchRoute
  '/search': typeof AppSearchRoute
  '/auth': typeof AuthAuthRoute
  '/profile/$username': typeof AppProfileUsernameRoute
  '/profile/edit-images': typeof AppProfileEditImagesRoute
  '/profile/edit-info': typeof AppProfileEditInfoRoute
  '/profile/me': typeof AppProfileMeRoute
  '/auth/forgottenpassword': typeof AuthAuthForgottenpasswordRoute
  '/auth/login': typeof AuthAuthLoginRoute
  '/auth/not-verify': typeof AuthAuthNotVerifyRoute
  '/auth/register': typeof AuthAuthRegisterRoute
  '/auth/verify/$id': typeof AuthAuthVerifyIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_app': typeof AppRouteWithChildren
  '/_auth': typeof AuthRouteWithChildren
  '/_app/TestWs': typeof AppTestWsRoute
  '/_app/home': typeof AppHomeRoute
  '/_app/likes': typeof AppLikesRoute
  '/_app/match': typeof AppMatchRoute
  '/_app/search': typeof AppSearchRoute
  '/_auth/auth_': typeof AuthAuthRoute
  '/_app/profile/$username': typeof AppProfileUsernameRoute
  '/_app/profile/edit-images': typeof AppProfileEditImagesRoute
  '/_app/profile/edit-info': typeof AppProfileEditInfoRoute
  '/_app/profile/me': typeof AppProfileMeRoute
  '/_auth/auth/forgottenpassword': typeof AuthAuthForgottenpasswordRoute
  '/_auth/auth/login': typeof AuthAuthLoginRoute
  '/_auth/auth/not-verify': typeof AuthAuthNotVerifyRoute
  '/_auth/auth/register': typeof AuthAuthRegisterRoute
  '/_auth/auth/verify/$id': typeof AuthAuthVerifyIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/TestWs'
    | '/home'
    | '/likes'
    | '/match'
    | '/search'
    | '/auth'
    | '/profile/$username'
    | '/profile/edit-images'
    | '/profile/edit-info'
    | '/profile/me'
    | '/auth/forgottenpassword'
    | '/auth/login'
    | '/auth/not-verify'
    | '/auth/register'
    | '/auth/verify/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/TestWs'
    | '/home'
    | '/likes'
    | '/match'
    | '/search'
    | '/auth'
    | '/profile/$username'
    | '/profile/edit-images'
    | '/profile/edit-info'
    | '/profile/me'
    | '/auth/forgottenpassword'
    | '/auth/login'
    | '/auth/not-verify'
    | '/auth/register'
    | '/auth/verify/$id'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/_auth'
    | '/_app/TestWs'
    | '/_app/home'
    | '/_app/likes'
    | '/_app/match'
    | '/_app/search'
    | '/_auth/auth_'
    | '/_app/profile/$username'
    | '/_app/profile/edit-images'
    | '/_app/profile/edit-info'
    | '/_app/profile/me'
    | '/_auth/auth/forgottenpassword'
    | '/_auth/auth/login'
    | '/_auth/auth/not-verify'
    | '/_auth/auth/register'
    | '/_auth/auth/verify/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_app",
        "/_auth"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/TestWs",
        "/_app/home",
        "/_app/likes",
        "/_app/match",
        "/_app/search",
        "/_app/profile/$username",
        "/_app/profile/edit-images",
        "/_app/profile/edit-info",
        "/_app/profile/me"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/auth_",
        "/_auth/auth/forgottenpassword",
        "/_auth/auth/login",
        "/_auth/auth/not-verify",
        "/_auth/auth/register",
        "/_auth/auth/verify/$id"
      ]
    },
    "/_app/TestWs": {
      "filePath": "_app/TestWs.tsx",
      "parent": "/_app"
    },
    "/_app/home": {
      "filePath": "_app/home.tsx",
      "parent": "/_app"
    },
    "/_app/likes": {
      "filePath": "_app/likes.tsx",
      "parent": "/_app"
    },
    "/_app/match": {
      "filePath": "_app/match.tsx",
      "parent": "/_app"
    },
    "/_app/search": {
      "filePath": "_app/search.tsx",
      "parent": "/_app"
    },
    "/_auth/auth_": {
      "filePath": "_auth/auth_.tsx",
      "parent": "/_auth"
    },
    "/_app/profile/$username": {
      "filePath": "_app/profile.$username.tsx",
      "parent": "/_app"
    },
    "/_app/profile/edit-images": {
      "filePath": "_app/profile.edit-images.tsx",
      "parent": "/_app"
    },
    "/_app/profile/edit-info": {
      "filePath": "_app/profile.edit-info.tsx",
      "parent": "/_app"
    },
    "/_app/profile/me": {
      "filePath": "_app/profile.me.tsx",
      "parent": "/_app"
    },
    "/_auth/auth/forgottenpassword": {
      "filePath": "_auth/auth.forgottenpassword.tsx",
      "parent": "/_auth"
    },
    "/_auth/auth/login": {
      "filePath": "_auth/auth.login.tsx",
      "parent": "/_auth"
    },
    "/_auth/auth/not-verify": {
      "filePath": "_auth/auth.not-verify.tsx",
      "parent": "/_auth"
    },
    "/_auth/auth/register": {
      "filePath": "_auth/auth.register.tsx",
      "parent": "/_auth"
    },
    "/_auth/auth/verify/$id": {
      "filePath": "_auth/auth.verify.$id.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
